{"version":3,"sources":["reducers/index.js","reducers/auth.js","reducers/weather.js","util/cookies.js","actions/index.js","util/SpotifyAPI.js","components/Login.js","components/Code.js","util/PlayerEngine.js","components/Player.js","App.js","serviceWorker.js","index.js"],"names":["combineReducers","auth","state","action","type","token","weather","getCookie","name","v","document","cookie","match","setCookie","value","seconds","d","Date","setTime","getTime","toGMTString","setToken","deleteToken","updateWeather","authEndpoint","clientId","redirectUri","window","location","scopes","encodeURIComponent","getTopType","a","page","limit","fetch","method","headers","Authorization","res","json","getRecommendations","seedArtists","seedTracks","seeds","join","getAudioFeatures","ids","getUserProfile","createPlaylist","userId","description","title","toLocaleDateString","Accept","body","JSON","stringify","public","id","addToPlaylist","playlistId","tracks","Login","loginUrl","dispatch","useDispatch","useSelector","useEffect","console","log","className","href","basename","path","component","hash","split","substring","forEach","item","decodeURIComponent","access_token","expires_in","generateToken","to","Code","checked","children","htmlFor","replace","defaultChecked","loadSongs","weatherData","playlist","topSongs","topSongIds","Promise","all","items","map","e","recs","audioTracks","audio_features","filter","Math","abs","valence","clouds","userProfile","date","getMonth","getDate","slice","uri","Player","player","useState","desc","setDesc","setPlaylist","background","setBackground","playlistName","useRef","loc","getWeather","url","response","data","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","onClick","length","placeholder","ref","savePlaylist","current","style","App","Boolean","hostname","store","createStore","rootReducer","ReactDOM","render","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d0e9c06e.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport auth from './auth';\nimport weather from './weather';\n\nexport default combineReducers({ auth, weather });\n","export default function auth(state = {}, action) {\n  switch (action.type) {\n    case 'GEN_TOKEN':\n      return {\n        ...state,\n        token: action.token,\n      };\n    case 'DEL_TOKEN':\n      return {\n        ...state,\n        token: null,\n      };\n    default:\n      return state;\n  }\n}\n","export default function weather(state = {}, action) {\n  switch (action.type) {\n    case 'UPDATE_WEATHER':\n      return {\n        ...state,\n        ...action.weather,\n      };\n    default:\n      return state;\n  }\n}\n","export function getCookie(name) {\n  const v = document.cookie.match(`(^|;) ?${name}=([^;]*)(;|$)`);\n  return v ? v[2] : null;\n}\nexport function setCookie(name, value, seconds) {\n  const d = new Date();\n  d.setTime(d.getTime() + 1000 * seconds);\n  document.cookie = `${name}=${value};path=/;expires=${d.toGMTString()}`;\n}\nexport function deleteCookie(name) { setCookie(name, '', -1); }\n","import { setCookie, deleteCookie } from '../util/cookies';\n\nexport const setToken = (token) => ({\n  type: 'GEN_TOKEN',\n  token,\n});\nexport function generateToken(hash) {\n  const res = {};\n  hash.substring(1).split('&').forEach((item) => {\n    res[item.split('=')[0]] = decodeURIComponent(item.split('=')[1]);\n  });\n  setCookie('token', res.access_token, res.expires_in);\n  return setToken(res.access_token);\n}\nexport function deleteToken() {\n  deleteCookie('token');\n  return ({ type: 'DEL_TOKEN' });\n}\nexport const updateWeather = (weather) => ({\n  type: 'UPDATE_WEATHER',\n  weather,\n});\n","export const authEndpoint = 'https://accounts.spotify.com/authorize';\n\nexport const clientId = '878fc98b349842e59c5c057bb5dff9ff';\nexport const redirectUri = `${window.location}/#/redirect`;\nexport const scopes = encodeURIComponent('user-top-read playlist-modify-public playlist-modify-private');\n\nexport async function getTopType({\n  token, type, page = 0, limit = 5,\n}) {\n  const res = await fetch(`https://api.spotify.com/v1/me/top/${type}?limit=${limit}&offset=${page * limit}`, {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n  return res.json();\n}\n\nexport async function getRecommendations({\n  token, limit = 100, seedArtists, seedTracks,\n}) {\n  let seeds = seedArtists ? `&seed_artists=${seedArtists.join(',')}` : '';\n  seeds = seedTracks ? `${seeds}&seed_tracks=${seedTracks.join(',')}` : seeds;\n  const res = await fetch(`https://api.spotify.com/v1/recommendations?limit=${limit}${seeds}`, {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n  return res.json();\n}\n\nexport async function getAudioFeatures(token, ids) {\n  const res = await fetch(`https://api.spotify.com/v1/audio-features/?ids=${ids.join(',')}`, {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n  return res.json();\n}\n\nexport async function getUserProfile(token) {\n  const res = await fetch('https://api.spotify.com/v1/me', {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n  return res.json();\n}\n\nexport async function createPlaylist({\n  token, userId, name, description,\n}) {\n  const title = name || `spotty sky playlist - ${(new Date()).toLocaleDateString()}`;\n  const res = await fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      name: title,\n      description,\n      public: false,\n    }),\n  });\n  return (await res.json()).id;\n}\n\nexport async function addToPlaylist({ token, playlistId, tracks }) {\n  const res = fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks?uris=${tracks.join(',')}`, {\n    method: 'POST',\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json',\n    },\n  });\n  return res;\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { HashRouter, Route, Redirect } from 'react-router-dom';\nimport { generateToken, setToken, deleteToken } from '../actions';\n\nimport { getCookie } from '../util/cookies';\n\nimport {\n  authEndpoint, clientId, redirectUri, scopes,\n} from '../util/SpotifyAPI';\n\nexport default function Login() {\n  const loginUrl = `${authEndpoint}?client_id=${clientId}${scopes && `&scope=${scopes}`}&redirect_uri=${redirectUri}&response_type=token&show_dialog=true`;\n  const dispatch = useDispatch();\n  const token = useSelector((state) => state.auth.token);\n\n  const redirect = () => {\n    const hash = window.location.hash.split('#')[2];\n    if (hash) { dispatch(generateToken(hash)); }\n    return <Redirect to=\"/\" />;\n  };\n\n  const logout = () => {\n    dispatch(deleteToken());\n    return <Redirect to=\"/\" />;\n  };\n\n  useEffect(() => {\n    console.log(getCookie('token'));\n    // Restores login session if cookie is still valid\n    if (getCookie('token') && !token) {\n      dispatch(setToken(getCookie('token')));\n    }\n  }, [dispatch, token]);\n\n\n  return (\n    <div className=\"login\">\n      { token\n        ? <a className=\"btn\" href=\"/logout\">Logout</a>\n        : <a className=\"btn\" href={loginUrl}>Login to Spotify</a> }\n      <HashRouter basename=\"/\">\n        <Route path=\"/redirect\" component={redirect} />\n        <Route path=\"/logout\" component={logout} />\n      </HashRouter>\n    </div>\n  );\n}\n","import React from 'react';\nimport './Code.scss';\n\nexport default function Code({ checked = true, title, children }) {\n  return (\n    <code>\n      <label htmlFor={`code__${title.replace(/\\s+/g, '_')}`}>\n        <input id={`code__${title.replace(/\\s+/g, '_')}`} type=\"checkbox\" defaultChecked={checked} />\n        <span className=\"title\">{title}</span>\n        <div className=\"content\">{children}</div>\n      </label>\n    </code>\n  );\n}\n","import {\n  createPlaylist, getTopType, getAudioFeatures, getRecommendations, getUserProfile, addToPlaylist,\n} from './SpotifyAPI';\n\nexport async function loadSongs(token, weatherData) {\n  let playlist = [];\n  try {\n    const topSongs = await getTopType({\n      token,\n      type: 'tracks',\n    });\n    const topSongIds = Promise.all(topSongs.items.map((e) => e.id));\n\n    const recs = await getRecommendations({\n      token,\n      seedTracks: await topSongIds,\n    });\n\n    let audioTracks = await getAudioFeatures(token, recs.tracks.map((e) => e.id));\n    audioTracks = audioTracks.audio_features.filter((e) => {\n      const delta = Math.abs(e.valence - weatherData.clouds.all * 0.01);\n      return delta > 0.5;\n    });\n    playlist = [...playlist, ...audioTracks];\n  } catch (e) {\n    console.log(e);\n  // break;\n  }\n  // setPlaylist(plist);\n  return playlist;\n}\n\nexport async function savePlaylist({\n  token, name, limit, playlist,\n}) {\n  const userProfile = await getUserProfile(token);\n\n  const date = new Date();\n  const playlistId = await createPlaylist({\n    token,\n    userId: userProfile.id,\n    name,\n    description: `Created on ${date.getMonth() + 1}/${date.getDate()} via ${window.location}`,\n  });\n  addToPlaylist({\n    token,\n    playlistId,\n    tracks: playlist.slice(0, limit).map((e) => e.uri),\n  });\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Login from './Login';\nimport Code from './Code';\nimport { updateWeather } from '../actions';\n\nimport './Player.scss';\nimport { loadSongs, savePlaylist } from '../util/PlayerEngine';\n\n// eslint-disable-next-line react/prop-types\nexport default function Player() {\n  let player;\n\n  const token = useSelector((state) => state.auth.token);\n  const weather = useSelector((state) => state.weather);\n  const dispatch = useDispatch();\n\n  const [desc, setDesc] = useState();\n  const [playlist, setPlaylist] = useState([]);\n  const limit = 30;\n  const [background, setBackground] = useState('rbga(255,255,255,1)');\n\n  const playlistName = useRef(null);\n\n  useEffect(() => {\n    let loc = 'q=New York, NY, US';\n\n    // Fetch weather data based on location\n    async function getWeather() {\n      const url = `https://community-open-weather-map.p.rapidapi.com/weather?${loc}&units=imperial`;\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'x-rapidapi-host': 'community-open-weather-map.p.rapidapi.com',\n          'x-rapidapi-key': '15fe13f990msha0b23062c32707cp148f84jsn17e58c929a3f',\n        },\n      });\n      const data = await response.json();\n      setBackground(`rgba(255,167,22,${1 - data.clouds.all * 0.01})`);\n      dispatch(updateWeather(data));\n      setDesc(`Music based on ${data.name} weather...`);\n    }\n    if (token) {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition((pos) => {\n          loc = `lat=${pos.coords.latitude}&lon=${pos.coords.longitude}`;\n          getWeather();\n        }, () => getWeather());\n      } else {\n        getWeather();\n      }\n    }\n  }, [dispatch, token]);\n\n  if (token) {\n    player = (\n      <div className=\"player__container\">\n        <h1>Spotty Sky</h1>\n        <h2>{ desc }</h2>\n        <div className=\"flex controls\">\n          <button type=\"button\" onClick={async () => setPlaylist(await loadSongs(token, weather))}>Load Songs</button>\n\n          {playlist.length > 0\n          && (\n            <div>\n              <input type=\"text\" placeholder=\"My awesome playlist\" ref={playlistName} />\n              <button\n                type=\"button\"\n                onClick={() => savePlaylist({\n                  token, name: playlistName.current.value, limit, playlist,\n                })}\n              >\n              Save playlist\n              </button>\n            </div>\n          )}\n        </div>\n        <Code title=\"Weather (JSON Response)\">\n          {JSON.stringify(weather)}\n        </Code>\n        <Code title=\"Playlist (JSON Response)\">\n          {JSON.stringify(playlist)}\n        </Code>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"player\" style={{ background }}>\n      <Login />\n      { player }\n    </div>\n  );\n}\n","import React from 'react';\nimport Player from './components/Player';\nimport './styles/global.scss';\n\nconst App = () => (\n  <div className=\"App\">\n    <Player />\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers';\n\nimport './styles/global.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}